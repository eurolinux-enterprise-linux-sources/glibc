Partial backport of this to fix cancellation issues:

commit 312be3f9f5eab1643d7dcc7728c76d413d4f2640
Author: Ulrich Drepper <drepper@gmail.com>
Date:   Tue Nov 15 04:24:42 2011 -0500

    Clean up internal fopen uses
    
    No need to ever not use c and e.

Full backports to fix rhbz952422:

commit 84e2a551a72c79b020694bb327e33b6d71b09b63
Author: Ulrich Drepper <drepper@gmail.com>
Date:   Wed Jun 22 10:32:07 2011 -0400

    Use a /sys/devices/system/cpu/online for _SC_NPROCESSORS_ONLN implementation

commit 852eb34d5c56bc75bdd82327fcf310d98655f6b0
Author: Ulrich Drepper <drepper@gmail.com>
Date:   Wed Jun 22 09:50:39 2011 -0400

    Rate limit expensive _SC_NPROCESSORS_ONLN computation

commit d53a73acdbf6ac6eb99cd06f5dd695da58d9e8f5
Author: Ulrich Drepper <drepper@gmail.com>
Date:   Tue Sep 6 20:22:37 2011 -0400

    Avoid gettimeofday vsyscall

diff --git a/sysdeps/unix/sysv/linux/getsysstats.c b/sysdeps/unix/sysv/linux/getsysstats.c
index af454b6..249bd19 100644
--- a/sysdeps/unix/sysv/linux/getsysstats.c
+++ b/sysdeps/unix/sysv/linux/getsysstats.c
@@ -35,6 +34,7 @@
 
 #include <atomic.h>
 #include <not-cancel.h>
+#include <kernel-features.h>
 
 
 /* How we can determine the number of available processors depends on
@@ -49,8 +49,6 @@
    But not all systems have support for the /proc filesystem.  If it
    is not available we simply return 1 since there is no way.  */
 
-#include <not-cancel.h>
-
 
 /* Other architectures use different formats for /proc/cpuinfo.  This
    provides a hook for alternative parsers.  */
@@ -128,6 +126,15 @@ next_line (int fd, char *const buffer, char **cp, char **re,
 int
 __get_nprocs ()
 {
+  static int cached_result;
+  static time_t timestamp;
+
+  time_t now = time (NULL);
+  time_t prev = timestamp;
+  atomic_read_barrier ();
+  if (now == prev)
+    return cached_result;
+
   /* XXX Here will come a test for the new system call.  */
 
   const size_t buffer_size = __libc_use_alloca (8192) ? 8192 : 512;
@@ -135,20 +142,65 @@ __get_nprocs ()
   char *buffer_end = buffer + buffer_size;
   char *cp = buffer_end;
   char *re = buffer_end;
-  int result = 1;
 
 #ifdef O_CLOEXEC
   const int flags = O_RDONLY | O_CLOEXEC;
 #else
   const int flags = O_RDONLY;
 #endif
+  int fd = open_not_cancel_2 ("/sys/devices/system/cpu/online", flags);
+  char *l;
+  int result = 0;
+  if (fd != -1)
+    {
+      l = next_line (fd, buffer, &cp, &re, buffer_end);
+      if (l != NULL)
+	do
+	  {
+	    char *endp;
+	    unsigned long int n = strtoul (l, &endp, 10);
+	    if (l == endp)
+	      {
+		result = 0;
+		break;
+	      }
+
+	    unsigned long int m = n;
+	    if (*endp == '-')
+	      {
+		l = endp + 1;
+		m = strtoul (l, &endp, 10);
+		if (l == endp)
+		  {
+		    result = 0;
+		    break;
+		  }
+	      }
+
+	    result += m - n + 1;
+
+	    l = endp;
+	    while (l < re && isspace (*l))
+	      ++l;
+	  }
+	while (l < re);
+
+      close_not_cancel_no_status (fd);
+
+      if (result > 0)
+	goto out;
+    }
+
+  cp = buffer_end;
+  re = buffer_end;
+  result = 1;
+
   /* The /proc/stat format is more uniform, use it by default.  */
-  int fd = open_not_cancel_2 ("/proc/stat", flags);
+  fd = open_not_cancel_2 ("/proc/stat", flags);
   if (fd != -1)
     {
       result = 0;
 
-      char *l;
       while ((l = next_line (fd, buffer, &cp, &re, buffer_end)) != NULL)
 	/* The current format of /proc/stat has all the cpu* entries
 	   at the front.  We assume here that stays this way.  */
@@ -169,6 +221,11 @@ __get_nprocs ()
 	}
     }
 
+ out:
+  cached_result = result;
+  atomic_write_barrier ();
+  timestamp = now;
+
   return result;
 }
 weak_alias (__get_nprocs, get_nprocs)
@@ -236,7 +293,7 @@ phys_pages_info (const char *format)
   long int result = -1;
 
   /* If we haven't found an appropriate entry return 1.  */
-  FILE *fp = fopen ("/proc/meminfo", "rc");
+  FILE *fp = fopen ("/proc/meminfo", "rce");
   if (fp != NULL)
     {
       /* No threads use this stream.  */
